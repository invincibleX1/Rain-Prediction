ðŸ”§ 1. Create the Google Spreadsheet

Open Google Sheets

Rename the sheet to something like ESP Data

Rename the default tab (bottom left) to ESP Data (case-sensitive!)

ðŸ“œ 2. Create a Google Apps Script
In the sheet, click Extensions > Apps Script

Delete any existing code and paste this:

javascript
Copy
Edit
function doPost(e) {
  // Parse the incoming data
  var data = JSON.parse(e.postData.contents);
  
  // Get the current timestamp
  var timestamp = new Date();
  
  // Open the Google Sheet and get the data sheet
  var sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName("ESP Data");
  
  // Append new data to the sheet
  sheet.appendRow([timestamp, data.pressure, data.temperature, data.humidity]);
  
  // Trigger the pressure drop check function
  checkPressureDrop();
  
  // Respond to the HTTP request
  return ContentService.createTextOutput("Success");
}

function checkPressureDrop() {
  // Get the sheet where pressure readings are stored
  var sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName("ESP Data");
  
  // Get all the data (including timestamps) from the sheet
  var data = sheet.getDataRange().getValues();
  
  // Check if there are enough readings (at least 3 hours worth)
  if (data.length < 4) {
    Logger.log("Not enough data to calculate the pressure drop.");
    return;
  }
  
  // Get the most recent reading (latest entry)
  var latestReading = data[data.length - 1];
  var latestPressure = latestReading[1];
  var latestTimestamp = new Date(latestReading[0]);
  
  // Check the reading from 3 hours ago (3 rows back)
  var oldReading = data[data.length - 4]; // 3 hours ago (if we are saving data every hour)
  var oldPressure = oldReading[1];
  var oldTimestamp = new Date(oldReading[0]);
  
  // Calculate the pressure drop
  var pressureDrop = oldPressure - latestPressure;
  
  // If the pressure dropped by more than 2.5 hPa, send an alert
  if (pressureDrop >= 2.5) {
    sendEmailAlert(pressureDrop, oldPressure, latestPressure, oldTimestamp, latestTimestamp);
  }
}

// Function to send an email alert
function sendEmailAlert(pressureDrop, oldPressure, latestPressure, oldTimestamp, latestTimestamp) {
  var subject = "Pressure Alert: Significant Drop Detected";
  var body = "The atmospheric pressure has dropped significantly over the last 3 hours.\n\n" +
             "Pressure drop: " + pressureDrop + " hPa\n" +
             "Old Pressure: " + oldPressure + " hPa (at " + oldTimestamp + ")\n" +
             "Latest Pressure: " + latestPressure + " hPa (at " + latestTimestamp + ")\n\n" +
             "Please check the data for more details.";

  var recipients = "mail1@example.com, mail2@example.com"; // List multiple emails separated by commas
  MailApp.sendEmail(recipients, subject, body);
}

Save the script (e.g. name it ESP Logger)

ðŸš€ 3. Deploy as Web App
Click Deploy > Manage deployments

Click + New deployment

Click Select type > Web app

Set:

Description: ESP Data Receiver

Execute as: Me

Who has access: Anyone

Click Deploy

Youâ€™ll be asked to Authorize â€” accept all prompts

Copy the Web App URL (it ends in /exec)
